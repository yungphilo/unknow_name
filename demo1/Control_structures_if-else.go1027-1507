package main

import (
	"fmt"
	"runtime"
)

func main() {
	bool1 := true
	if !bool1 {
		fmt.Printf("The value is false\n")
	} else {
		fmt.Printf("The value is true\n")
	}
	// no := 1
	// // dare := "How dare you"
	// // bro := "What's up bro"
	// if no > 2 {
	// 	return
	// }
	// return
	/*
		注意事项 不要同时在 if-else 结构的两个分支里都使用 return 语句，
		这将导致编译报错 function ends without a return statement
		（你可以认为这是一个编译器的 Bug 或者特性）。
		（ 译者注：该问题已经在 Go 1.1 中被修复或者说改进 ）
		我试着没啥问题
	*/
	fmt.Println(Abs(-26))
	fmt.Println(prompt)
	fmt.Printf("5>6 is:%t\n", isGreater(5, 6))
	va1, va2 := 4, 5
	if va1 = va2 + 6; va1 > va2 {
		fmt.Printf("%d is bigger than %d\n", va1, va2)
	} else {
		fmt.Printf("%d is smaller than %d\n", va1, va2)
	}
	ten := 10
	var number int
	if ten < 0 {
		fmt.Printf("%d is Negative number \n", ten)
	} else if number = 13; ten >= 0 && ten > number {
		fmt.Printf("%d is Positive number and bigger than %d", ten, number)
	} else {
		fmt.Printf("%d is Positive number and smaller than %d", ten, number)
	}
}

var prompt = "Enter a digit, e.g. 3 " + "or %s to quit."

func init() {
	if runtime.GOOS == "windows" {
		prompt = fmt.Sprintf(prompt, "Ctrl+Z, Enter")
	} else { //Unix-like
		prompt = fmt.Sprintf(prompt, "Ctrl+D")
	}
}
func Abs(x int) int {
	if x < 0 {
		return -x
	}
	return x
}
func isGreater(x, y int) bool {
	if x > y {
		return true
	}
	return false
}
